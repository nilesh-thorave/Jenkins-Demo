{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 0,
    "pending": 0,
    "failures": 2,
    "start": "2018-01-11T10:28:58.996Z",
    "end": "2018-01-11T10:28:59.043Z",
    "duration": 47,
    "testsRegistered": 2,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Server Test Cases",
        "suites": [],
        "tests": [
          {
            "title": "#Success Case",
            "fullTitle": "Server Test Cases #Success Case",
            "timedOut": false,
            "duration": 16,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n        \"name\" : \"Shweta\"\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNull(err, 'Expected err to be null, but its not null');\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 200, 'Expected status 200 but got ' + res.statusCode);\n\t\t\tassert.equal(res.body.message, \"Hiee Shweta!! Welcome to sample server!!\");\n    done();\n});",
            "err": {
              "message": "TypeError: Cannot read property 'body' of undefined",
              "estack": "TypeError: Cannot read property 'body' of undefined\n    at Request._callback (test\\server-test.js:31:28)\n    at self.callback (node_modules\\request\\request.js:186:22)\n    at Request.init (node_modules\\request\\request.js:274:17)\n    at new Request (node_modules\\request\\request.js:128:8)\n    at request (node_modules\\request\\index.js:53:10)\n    at Context.<anonymous> (test\\server-test.js:28:9)"
            },
            "isRoot": false,
            "uuid": "11ca6384-eb6e-400d-a3b2-cb049d25e19d",
            "parentUUID": "73280fc9-12d3-4cd2-8902-891b2c4765f8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "#Error Case - mandatory field missing",
            "fullTitle": "Server Test Cases #Error Case - mandatory field missing",
            "timedOut": false,
            "duration": 15,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n\t\t\t\t\"name\":\"\"\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 400, 'Expected status 400 but got ' + res.statusCode);\n    assert.equal(res.body.error, 'Mandatory field missing', 'Expected mandatory field missing error but got '+res.body);\n    done();\n});",
            "err": {
              "message": "TypeError: Cannot read property 'body' of undefined",
              "estack": "TypeError: Cannot read property 'body' of undefined\n    at Request._callback (test\\server-test.js:52:28)\n    at self.callback (node_modules\\request\\request.js:186:22)\n    at Request.init (node_modules\\request\\request.js:274:17)\n    at new Request (node_modules\\request\\request.js:128:8)\n    at request (node_modules\\request\\index.js:53:10)\n    at Context.<anonymous> (test\\server-test.js:49:9)"
            },
            "isRoot": false,
            "uuid": "15fbbc18-e757-4e91-ac67-7f0a1dfbe567",
            "parentUUID": "73280fc9-12d3-4cd2-8902-891b2c4765f8",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\server-test.js",
        "uuid": "73280fc9-12d3-4cd2-8902-891b2c4765f8",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "Server Test Cases \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "if (!(testData.URL)) {\n    this.skip();\n}",
            "err": {},
            "isRoot": false,
            "uuid": "3a855b98-ff0d-4394-b86d-e0aac944ec2a",
            "parentUUID": "73280fc9-12d3-4cd2-8902-891b2c4765f8",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "Server Test Cases \"after all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "e59b4fc0-a73b-4022-89f6-40e72ab9bf3f",
            "parentUUID": "73280fc9-12d3-4cd2-8902-891b2c4765f8",
            "isHook": true,
            "skipped": false
          }
        ],
        "fullFile": "D:\\TRAINING\\Jenkins\\sample-api\\test\\server-test.js",
        "passes": [],
        "failures": [
          {
            "title": "#Success Case",
            "fullTitle": "Server Test Cases #Success Case",
            "timedOut": false,
            "duration": 16,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n        \"name\" : \"Shweta\"\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNull(err, 'Expected err to be null, but its not null');\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 200, 'Expected status 200 but got ' + res.statusCode);\n\t\t\tassert.equal(res.body.message, \"Hiee Shweta!! Welcome to sample server!!\");\n    done();\n});",
            "err": {
              "message": "TypeError: Cannot read property 'body' of undefined",
              "estack": "TypeError: Cannot read property 'body' of undefined\n    at Request._callback (test\\server-test.js:31:28)\n    at self.callback (node_modules\\request\\request.js:186:22)\n    at Request.init (node_modules\\request\\request.js:274:17)\n    at new Request (node_modules\\request\\request.js:128:8)\n    at request (node_modules\\request\\index.js:53:10)\n    at Context.<anonymous> (test\\server-test.js:28:9)"
            },
            "isRoot": false,
            "uuid": "11ca6384-eb6e-400d-a3b2-cb049d25e19d",
            "parentUUID": "73280fc9-12d3-4cd2-8902-891b2c4765f8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "#Error Case - mandatory field missing",
            "fullTitle": "Server Test Cases #Error Case - mandatory field missing",
            "timedOut": false,
            "duration": 15,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n\t\t\t\t\"name\":\"\"\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 400, 'Expected status 400 but got ' + res.statusCode);\n    assert.equal(res.body.error, 'Mandatory field missing', 'Expected mandatory field missing error but got '+res.body);\n    done();\n});",
            "err": {
              "message": "TypeError: Cannot read property 'body' of undefined",
              "estack": "TypeError: Cannot read property 'body' of undefined\n    at Request._callback (test\\server-test.js:52:28)\n    at self.callback (node_modules\\request\\request.js:186:22)\n    at Request.init (node_modules\\request\\request.js:274:17)\n    at new Request (node_modules\\request\\request.js:128:8)\n    at request (node_modules\\request\\index.js:53:10)\n    at Context.<anonymous> (test\\server-test.js:49:9)"
            },
            "isRoot": false,
            "uuid": "15fbbc18-e757-4e91-ac67-7f0a1dfbe567",
            "parentUUID": "73280fc9-12d3-4cd2-8902-891b2c4765f8",
            "isHook": false,
            "skipped": false
          }
        ],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": true,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 0,
        "totalFailures": 2,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": true,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 31,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "e83835b3-65ce-4b71-a821-2cd5b19ff4bb",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "#Success Case",
      "fullTitle": "Server Test Cases #Success Case",
      "timedOut": false,
      "duration": 16,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n        \"name\" : \"Shweta\"\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNull(err, 'Expected err to be null, but its not null');\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 200, 'Expected status 200 but got ' + res.statusCode);\n\t\t\tassert.equal(res.body.message, \"Hiee Shweta!! Welcome to sample server!!\");\n    done();\n});",
      "err": {
        "message": "TypeError: Cannot read property 'body' of undefined",
        "estack": "TypeError: Cannot read property 'body' of undefined\n    at Request._callback (test\\server-test.js:31:28)\n    at self.callback (node_modules\\request\\request.js:186:22)\n    at Request.init (node_modules\\request\\request.js:274:17)\n    at new Request (node_modules\\request\\request.js:128:8)\n    at request (node_modules\\request\\index.js:53:10)\n    at Context.<anonymous> (test\\server-test.js:28:9)"
      },
      "isRoot": false,
      "uuid": "11ca6384-eb6e-400d-a3b2-cb049d25e19d",
      "parentUUID": "73280fc9-12d3-4cd2-8902-891b2c4765f8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "#Error Case - mandatory field missing",
      "fullTitle": "Server Test Cases #Error Case - mandatory field missing",
      "timedOut": false,
      "duration": 15,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n\t\t\t\t\"name\":\"\"\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 400, 'Expected status 400 but got ' + res.statusCode);\n    assert.equal(res.body.error, 'Mandatory field missing', 'Expected mandatory field missing error but got '+res.body);\n    done();\n});",
      "err": {
        "message": "TypeError: Cannot read property 'body' of undefined",
        "estack": "TypeError: Cannot read property 'body' of undefined\n    at Request._callback (test\\server-test.js:52:28)\n    at self.callback (node_modules\\request\\request.js:186:22)\n    at Request.init (node_modules\\request\\request.js:274:17)\n    at new Request (node_modules\\request\\request.js:128:8)\n    at request (node_modules\\request\\index.js:53:10)\n    at Context.<anonymous> (test\\server-test.js:49:9)"
      },
      "isRoot": false,
      "uuid": "15fbbc18-e757-4e91-ac67-7f0a1dfbe567",
      "parentUUID": "73280fc9-12d3-4cd2-8902-891b2c4765f8",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [],
  "allFailures": [
    {
      "title": "#Success Case",
      "fullTitle": "Server Test Cases #Success Case",
      "timedOut": false,
      "duration": 16,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n        \"name\" : \"Shweta\"\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNull(err, 'Expected err to be null, but its not null');\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 200, 'Expected status 200 but got ' + res.statusCode);\n\t\t\tassert.equal(res.body.message, \"Hiee Shweta!! Welcome to sample server!!\");\n    done();\n});",
      "err": {
        "message": "TypeError: Cannot read property 'body' of undefined",
        "estack": "TypeError: Cannot read property 'body' of undefined\n    at Request._callback (test\\server-test.js:31:28)\n    at self.callback (node_modules\\request\\request.js:186:22)\n    at Request.init (node_modules\\request\\request.js:274:17)\n    at new Request (node_modules\\request\\request.js:128:8)\n    at request (node_modules\\request\\index.js:53:10)\n    at Context.<anonymous> (test\\server-test.js:28:9)"
      },
      "isRoot": false,
      "uuid": "11ca6384-eb6e-400d-a3b2-cb049d25e19d",
      "parentUUID": "73280fc9-12d3-4cd2-8902-891b2c4765f8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "#Error Case - mandatory field missing",
      "fullTitle": "Server Test Cases #Error Case - mandatory field missing",
      "timedOut": false,
      "duration": 15,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n\t\t\t\t\"name\":\"\"\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 400, 'Expected status 400 but got ' + res.statusCode);\n    assert.equal(res.body.error, 'Mandatory field missing', 'Expected mandatory field missing error but got '+res.body);\n    done();\n});",
      "err": {
        "message": "TypeError: Cannot read property 'body' of undefined",
        "estack": "TypeError: Cannot read property 'body' of undefined\n    at Request._callback (test\\server-test.js:52:28)\n    at self.callback (node_modules\\request\\request.js:186:22)\n    at Request.init (node_modules\\request\\request.js:274:17)\n    at new Request (node_modules\\request\\request.js:128:8)\n    at request (node_modules\\request\\index.js:53:10)\n    at Context.<anonymous> (test\\server-test.js:49:9)"
      },
      "isRoot": false,
      "uuid": "15fbbc18-e757-4e91-ac67-7f0a1dfbe567",
      "parentUUID": "73280fc9-12d3-4cd2-8902-891b2c4765f8",
      "isHook": false,
      "skipped": false
    }
  ],
  "copyrightYear": 2018
}